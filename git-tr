#!/bin/bash

VERSION=1.0

git_dir() {
    git rev-parse --git-dir
}

make_trellourl() {
    local branch="$1"
    local trid="${branch#$basename_feature}"
    if test "$trid" = "${branch}"; then
        trid="${branch#$basename_hotfix}"
    fi
    if test "$trid" = "${branch}" -o ${#trid} -ne 8; then
        return 0
    fi
    echo "$trello_cardurl/$trid/"
}

load_settings() {
    current_branch=$(echo $(git branch --format="%(if)%(HEAD)%(then)%(refname:short)%(end)"))
    trello_cardurl="https://trello.com/c"
    git_dir=$(git rev-parse --git-dir 2>/dev/null)
    develop_branch=$(git config --get trello.branch.develop)
    release_branch=$(git config --get trello.branch.release)
    basename_feature=$(git config --get trello.prefix.feature)
    basename_hotfix=$(git config --get trello.prefix.hotfix)
    basename_feature=${basename_feature:-feature/}
    basename_hotfix=${basename_hotfix:-hotfix/}

    trellourl=$(git config --get branch."$current_branch".trello)
    if test -n "$trellourl"; then
        return 0
    fi

    trellourl=$(make_trellourl "$current_branch")
}

assert_in_trello() {
    if test -n "$trellourl"; then
        return 0
    fi

    echo "It seems not in trello working branch, specify trello card url manually"
    echo ""
    echo "Usage: git config branch."$current_branch".trello URL"
    echo ""
    exit 1
}

init() {
    load_settings
    echo ""
    echo "* You are about to set git local variables for trello."
    if test -z "$develop_branch"; then
        develop_branch=$(git branch | grep -w develop | tr '*' ' ' | head -1)
        develop_branch=$(echo $develop_branch)
    fi
    if test -z "$release_branch"; then
        release_branch=$(git branch | grep -w master | tr '*' ' ' | head -1)
        release_branch=$(echo $release_branch)
    fi
    echo ""
    echo "* Branches for feature base."
    PS3="Choose feature base branch (e.g.:$develop_branch): "
    select develop_branch in $(git branch | grep -v '/' | tr '*' ' ')
    do
        if git branch -l | grep -q $develop_branch 2>/dev/null; then
            break
        fi
    done
    echo ""
    echo "* Branches for hotfix base."
    PS3="Choose hotfix base branch (e.g.:$release_branch): "
    select release_branch in $(git branch | grep -v '/' | tr '*' ' ')
    do
        if git branch -l | grep -q $release_branch 2>/dev/null; then
            break
        fi
    done

    git config trello.branch.develop "$develop_branch"
    git config trello.branch.release "$release_branch"
    echo ""
    echo "* Your settings are stored git local config. check this,"
    echo ""
    echo "  git config -l | grep trello"
    echo ""
    git config -l | grep trello
    echo ""
    echo "* Anytime you want to change those values, just run"
    echo ""
    echo "  git tr init"
    echo ""
}

create() {
    load_settings
    mode="$1"
    shift
    trellourl="$1"
    if test "${trellourl#http}" != "${trellourl}"; then
        ## EX) https://trello.com/c/0x1UMRbn1/123-this-is-test-card
        urllen=${#trellourl}
        trid="${trellourl#*://*/*/}"
        len1=${#trid}
        trid=${trid%%/*}
        len2=${#trid}
        len3=$(expr $urllen - $len1 + 1 + $len2)
        trellourl="${trellourl:0:$len3}"
    else
        echo "Usage: git tr $mode https://trello.com/..."
        exit 1
    fi
    if test "$mode" = "feature"; then
        basebr="$develop_branch"
        br="$basename_feature$trid"
    else
        basebr="$release_branch"
        br="$basename_hotfix$trid"
    fi
    if git checkout "$br" 2>/dev/null; then
        echo "Already exists, change current branch to: $br"
        return
    fi
    echo "* Trying to create branch $br from $basebr"
    git checkout -b $br $basebr || exit
    echo ""
    git config branch."$br".trello "$trellourl" || exit
}

commit() {
    load_settings
    assert_in_trello
    echo "Trello url: $trellourl"
    gitdir=$(git_dir)
    mkdir "$gitdir/MSGTEMPLATES" 2>/dev/null
    msgtemplate="$gitdir/MSGTEMPLATES/$$.txt"
    echo -e "\n\n$trellourl" > "$msgtemplate"
    git commit -v -t "$msgtemplate" "$@"
}

push() {
    load_settings
    assert_in_trello
    git push -u origin "$current_branch" "$@"
    echo -e "\n$trellourl\n"
}

list() {
    load_settings
    local _feature=${basename_feature/\//\\/}
    local _hotfix=${basename_hotfix/\//\\/}
    local branch
    git branch --list --format '%(refname:short)' | 
    while read branch
    do
        trellourl=$(make_trellourl "$branch")
        if test -z "$trellourl"; then
            continue
        fi
        echo $branch $trellourl
    done
}

delete() {
    load_settings
    BRANCHES=$(git branch -l "$basename_feature*" "$basename_hotfix*" | xargs echo )
    if test -z "$BRANCHES"; then
        echo "Merged branches are already deleted"
        return 1
    fi
    echo "Trying ..: git branch -d $BRANCHES $@"
    echo "This will try to delete branches, but will be fail only on not merged branches"
    PS3="Go on? "
    select yn in Yes No
    do
        if test "$yn" == "No"; then
            return 0
        fi
        if test "$yn" == "Yes"; then
            break
        fi
    done
    git branch -d $BRANCHES $@
}

help() {
    cat <<EOT
Git trello plugin v$VERSION

Usage: git tr <command>

<command> := {init|feature|hotfix|commit|push}
<command> := {i|f|h|c|p} (in short)

git tr init
===========
Setup git-tr variables, every configuration is stored in .git/config via 'git config'.

 - Base branch for feature
 - Base branch for hotfix

git tr feature <trello-url> [<checkout options>]
================================================
Start new feature branch from <trello-url> which is copied from url of a card.
This command uses 'git checkout -b', any <checkout options> can be added.
Say, if you are working on https://trello.com/c/0x1UMRbn1/123-this-is-test-card,
you can start a branch with

  git tr feature https://trello.com/c/021UMRbn1/123-this-is-test-card

And this will start a feature/021UMRbn1 branch from develop
(or from what you chose in init phase).

git tr hotfix <trello-url> [<checkout options>]
===============================================
Same with 'feature' command but this starts a hotfix branch from master

git tr commit [<commit options>]
================================
Do 'git commit' with a template which contains the trello url

git tr push [<push options>]
============================
Do 'git push origin <feature branch>', and this will help you to make a remote branch



EOT
}

show() {
    load_settings
    echo ""
    echo "Base branch for features: $develop_branch"
    echo "Base branch for hotfixes: $release_branch"
    echo "Base name for feature   : $basename_feature"
    echo "Base name for hotfix    : $basename_hotfix"
    echo ""
    echo "Current branch: $current_branch"
    echo "Current trello: ${trellourl:-(Not in trello branch)}"
    echo ""
    echo "Trello Branches:"
    list
    echo ""
}

case "$1" in
    i|init)
        init
        ;;
    help)
        help
        ;;
    f|feature)
        shift
        create feature "$@"
        ;;
    h|hotfix)
        shift
        create hotfix "$@"
        ;;
    c|commit)
        shift
        commit "$@"
        ;;
    p|push)
        shift
        push "$@"
        ;;
    l|list)
        shift
        list "$@"
        ;;
    d|del)
        shift
        delete "$@"
        ;;
    "")
        show
        ;;
    *)
        echo "Unkown command $1"
        exit 1
        ;;
esac
